#!/usr/bin/env bash

set -euo pipefail

retry() {
  local retries=$1; shift
  local delay=$1; shift
  local attempts=1

  until "$@"; do
    retry_exit_status=$?
    echo "Exited with $retry_exit_status" >&2
    if (( retries == "0" )); then
      return $retry_exit_status
    elif (( attempts == retries )); then
      echo "Failed $attempts retries" >&2
      return $retry_exit_status
    else
      echo "Retrying $((retries - attempts)) more times..." >&2
      attempts=$((attempts + 1))
      sleep "$delay"
    fi
  done
}

container_registry_login() {
  local registryPath="${1}"
  if [ -z "$VAULT_TOKEN" ]; then
    echo "No valid VAULT_TOKEN specified. Exiting.."
    exit 1
  fi

  # Login to docker registry
  DOCKER_PASSWORD=$(retry 5 5 vault read -field password ${registryPath})
  if [ -z "$DOCKER_PASSWORD" ]; then
    echo "No valid DOCKER_PASSWORD retrieved from Vault. Exiting..."
    exit 1
  fi

  echo "$DOCKER_PASSWORD" | buildah login -u cloudci --password-stdin docker.elastic.co
}

build_image() {
  local dockerfile_path=${1}
  local app_name=${2}
  local tag=${3}
  echo "--- Building Container in directory $dockerfile_path"
  cd $dockerfile_path

  echo "+++ Building container image $app_name"
  echo "buildah bud -t $app_name:$tag ${BUILDKITE_PLUGIN_BUILDAH_ADDITIONAL_BUILD_ARGS:-} ."
  buildah bud -t $app_name:$tag ${BUILDKITE_PLUGIN_BUILDAH_ADDITIONAL_BUILD_ARGS:-} .
}

tag_and_push_image() {
  local app_name=${1}
  local tag=${2}
  local docker_registry_path=${3}
  local app_and_tag=$app_name:$tag

  echo "--- Tagging container image $app_and_tag"
  buildah tag "$app_and_tag" "$docker_registry_path/$app_and_tag"

  buildah images --filter "reference=*$app_name*"

  echo "+++ Pushing image to $docker_registry_path/$app_and_tag"
  buildah push "$docker_registry_path/$app_and_tag"
}

validate_required_properties(){
  local valid=1
  if [[ -z ${BUILDKITE_PLUGIN_BUILDAH_DOCKER_IMAGE_NAME:-} ]]; then
    echo "'docker_image_name' property is required"
    valid=0
  fi
  if [[ -z ${BUILDKITE_PLUGIN_BUILDAH_DOCKERFILE_PATH:-} ]]; then
    echo "'dockerfile_path' property is required"
    valid=0
  fi
  if [[ -z ${BUILDKITE_PLUGIN_BUILDAH_VAULT_SECRET_PATH:-} ]]; then
    echo "'vault_secret_path' property is required"
    valid=0
  fi
  if [[ -z ${BUILDKITE_PLUGIN_BUILDAH_DOCKER_REGISTRY_PATH:-} ]]; then
    echo "'docker_registry_path' property is required"
    valid=0
  fi
  if [ "$valid" -eq "0" ]; then
    exit 1
  fi
}

echo '--- Reading plugin parameters'
validate_required_properties

docker_image_name=${BUILDKITE_PLUGIN_BUILDAH_DOCKER_IMAGE_NAME}
dockerfile_path=${BUILDKITE_PLUGIN_BUILDAH_DOCKERFILE_PATH}
vault_secret_path=${BUILDKITE_PLUGIN_BUILDAH_VAULT_SECRET_PATH}
docker_registry_path=${BUILDKITE_PLUGIN_BUILDAH_DOCKER_REGISTRY_PATH}
tag=${BUILDKITE_PLUGIN_BUILDAH_TAG:-${BUILDKITE_COMMIT:0:7}}
build_only=${BUILDKITE_PLUGIN_BUILDAH_BUILD_ONLY:-false}

# Work-around for Buildah rootless issue
export STORAGE_DRIVER=vfs
export BUILDAH_ISOLATION=chroot

buildah --version

build_image $dockerfile_path $docker_image_name $tag

#only do if requested
if [ "$build_only" = false ]; then
  echo "logging in"
  container_registry_login $vault_secret_path
  tag_and_push_image $docker_image_name $tag $docker_registry_path
else
  echo "skipping tag and push"
fi
